{"version":3,"sources":["Home.js","Header.js","Teams.js","Owners.js","Players.js","Venues.js","App.js","index.js"],"names":["Home","className","Helmet","Nav","Link","as","to","Component","gotohome","window","location","onClick","this","Teams","state","checkedcatall","checkedAverageall","checkedhumidall","checkednumberofballsall","checkedtotalrunsall","checkednumberofouts","checkedawaywinperc","StrikeRates","id","value","checked","Average","Total_Runs","Number_of_balls","Number_of_outs","Away_Win_Perc","handleAllCheckedStrikeRate","event","forEach","item","target","setState","handleCheckChildElementStrikeRate","handleAllCheckedAverage","handleCheckChildElementAverage","handleAllCheckedTotal_Runs","handleCheckChildElementTotal_Runs","handleAllCheckedNumber_of_balls","handleCheckChildElementNumber_of_balls","handleAllCheckedNumber_of_outs","handleCheckChildElementNumber_of_outs","handleAllCheckedAway_Win_Perc","handleCheckChildElementAway_Win_Perc","style","backgroundColor","Container","Row","Col","sm","lg","xs","Card","Header","Body","Form","Check","onChange","type","label","map","i","Teams_Data","team","home_wins","away_wins","home_matches","away_matches","home_win_percentage","toFixed","away_win_percentage","Owners","Players","Players_Data","player","Player_Name","DOB","Batting_Hand","Bowling_Skill","Country","Venues","Venues_Data","venue","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6+zEAKqBA,E,uKAGb,OACI,sBAAKC,UAAU,aAAf,UACI,cAACC,EAAA,EAAD,UACI,2DAEJ,sBAAKD,UAAU,qBAAf,UACI,mEACA,kEACA,cAACE,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,WAAvB,qBACA,cAACH,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,SAAvB,mBACA,cAACH,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,UAAvB,oBACA,cAACH,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,UAAvB,8B,GAdcC,aCFbP,G,kNAEjBQ,SAAW,WACPC,OAAOC,SAAW,yB,uDAGlB,OACI,wBAAQT,UAAU,eAAlB,SACI,oBAAIU,QAASC,KAAKJ,SAAlB,yC,GARkBD,c,uDCKbM,E,4MAEjBC,MAAQ,CACJC,eAAe,EACfC,mBAAmB,EACnBC,iBAAiB,EACjBC,yBAAyB,EACzBC,qBAAqB,EACrBC,qBAAqB,EACrBC,oBAAoB,EACpBC,YAAa,CACT,CAAEC,GAAI,GAAIC,MAAO,OAAQC,SAAS,GAClC,CAAEF,GAAI,GAAIC,MAAO,OAAQC,SAAS,GAClC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,MAAOC,SAAS,IAErCC,QAAS,CACL,CAAEH,GAAI,GAAIC,MAAO,OAAQC,SAAS,GAClC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,MAAOC,SAAS,IAErCE,WAAY,CACR,CAAEJ,GAAI,GAAIC,MAAO,OAAQC,SAAS,GAClC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,SAAUC,SAAS,GACpC,CAAEF,GAAI,GAAIC,MAAO,OAAQC,SAAS,IAEtCG,gBAAiB,CACb,CAAEL,GAAI,GAAIC,MAAO,OAAQC,SAAS,GAClC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,SAAUC,SAAS,GACpC,CAAEF,GAAI,GAAIC,MAAO,OAAQC,SAAS,IAEtCI,eAAgB,CACZ,CAAEN,GAAI,GAAIC,MAAO,OAAQC,SAAS,GAClC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,SAAUC,SAAS,IAExCK,cAAe,CACX,CAAEP,GAAI,GAAIC,MAAO,OAAQC,SAAS,GAClC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,SAAUC,SAAS,K,EAI5CM,2BAA6B,SAACC,GAC1B,IAAIV,EAAc,EAAKR,MAAMQ,YAC7BA,EAAYW,SAAQ,SAAAC,GAAI,OAAIA,EAAKT,QAAUO,EAAMG,OAAOV,WACxD,EAAKW,SAAS,CACVd,YAAaA,EACbP,cAAeiB,EAAMG,OAAOV,W,EAIpCY,kCAAoC,SAACL,GACjC,IAAIV,EAAc,EAAKR,MAAMQ,YAC7BA,EAAYW,SAAQ,SAAAC,GACZA,EAAKV,QAAUQ,EAAMG,OAAOX,QAC5BU,EAAKT,QAAUO,EAAMG,OAAOV,UAEX,IAAjBS,EAAKT,SACL,EAAKW,SAAS,CAAErB,eAAe,OAGvC,EAAKqB,SAAS,CAAEd,YAAaA,K,EAEjCgB,wBAA0B,SAACN,GACvB,IAAIN,EAAU,EAAKZ,MAAMY,QACzBA,EAAQO,SAAQ,SAAAC,GAAI,OAAIA,EAAKT,QAAUO,EAAMG,OAAOV,WACpD,EAAKW,SAAS,CACVV,QAASA,EACTV,kBAAmBgB,EAAMG,OAAOV,W,EAIxCc,+BAAiC,SAACP,GAC9B,IAAIN,EAAU,EAAKZ,MAAMY,QACzBA,EAAQO,SAAQ,SAAAC,GACRA,EAAKV,QAAUQ,EAAMG,OAAOX,QAC5BU,EAAKT,QAAUO,EAAMG,OAAOV,UAEX,IAAjBS,EAAKT,SACL,EAAKW,SAAS,CAAEpB,mBAAmB,OAG3C,EAAKoB,SAAS,CAAEV,QAASA,K,EAG7Bc,2BAA6B,SAACR,GAC1B,IAAIL,EAAa,EAAKb,MAAMa,WAC5BA,EAAWM,SAAQ,SAAAC,GAAI,OAAIA,EAAKT,QAAUO,EAAMG,OAAOV,WACvD,EAAKW,SAAS,CACVT,WAAYA,EACZR,oBAAqBa,EAAMG,OAAOV,W,EAI1CgB,kCAAoC,SAACT,GACjC,IAAIL,EAAa,EAAKb,MAAMa,WAC5BA,EAAWM,SAAQ,SAAAC,GACXA,EAAKV,QAAUQ,EAAMG,OAAOX,QAC5BU,EAAKT,QAAUO,EAAMG,OAAOV,UAEX,IAAjBS,EAAKT,SACL,EAAKW,SAAS,CAAEjB,qBAAqB,OAG7C,EAAKiB,SAAS,CAAET,WAAYA,K,EAGhCe,gCAAkC,SAACV,GAC/B,IAAIJ,EAAkB,EAAKd,MAAMc,gBACjCA,EAAgBK,SAAQ,SAAAC,GAAI,OAAIA,EAAKT,QAAUO,EAAMG,OAAOV,WAC5D,EAAKW,SAAS,CACVR,gBAAiBA,EACjBV,wBAAyBc,EAAMG,OAAOV,W,EAI9CkB,uCAAyC,SAACX,GACtC,IAAIJ,EAAkB,EAAKd,MAAMc,gBACjCA,EAAgBK,SAAQ,SAAAC,GAChBA,EAAKV,QAAUQ,EAAMG,OAAOX,QAC5BU,EAAKT,QAAUO,EAAMG,OAAOV,UAEX,IAAjBS,EAAKT,SACL,EAAKW,SAAS,CAAElB,yBAAyB,OAGjD,EAAKkB,SAAS,CAAER,gBAAiBA,K,EAGrCgB,+BAAiC,SAACZ,GAC9B,IAAIH,EAAiB,EAAKf,MAAMe,eAChCA,EAAeI,SAAQ,SAAAC,GAAI,OAAIA,EAAKT,QAAUO,EAAMG,OAAOV,WAC3D,EAAKW,SAAS,CACVP,eAAgBA,EAChBT,oBAAqBY,EAAMG,OAAOV,W,EAI1CoB,sCAAwC,SAACb,GACrC,IAAIH,EAAiB,EAAKf,MAAMe,eAChCA,EAAeI,SAAQ,SAAAC,GACfA,EAAKV,QAAUQ,EAAMG,OAAOX,QAC5BU,EAAKT,QAAUO,EAAMG,OAAOV,UAEX,IAAjBS,EAAKT,SACL,EAAKW,SAAS,CAAEhB,qBAAqB,OAG7C,EAAKgB,SAAS,CAAEP,eAAgBA,K,EAEpCiB,8BAAgC,SAACd,GAC7B,IAAIF,EAAgB,EAAKhB,MAAMgB,cAC/BA,EAAcG,SAAQ,SAAAC,GAAI,OAAIA,EAAKT,QAAUO,EAAMG,OAAOV,WAC1D,EAAKW,SAAS,CACVN,cAAeA,EACfT,mBAAoBW,EAAMG,OAAOV,W,EAIzCsB,qCAAuC,SAACf,GACpC,IAAIF,EAAgB,EAAKhB,MAAMgB,cAC/BA,EAAcG,SAAQ,SAAAC,GACdA,EAAKV,QAAUQ,EAAMG,OAAOX,QAC5BU,EAAKT,QAAUO,EAAMG,OAAOV,UAEX,IAAjBS,EAAKT,SACL,EAAKW,SAAS,CAAEf,oBAAoB,OAG5C,EAAKe,SAAS,CAAEN,cAAeA,K,uDAGzB,IAAD,OACL,OACI,sBAAK7B,UAAU,aAAf,UACI,cAACC,EAAA,EAAD,UACI,2DAEJ,sBAAKD,UAAU,wBAAf,UACI,cAACE,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,WAAvB,qBACA,cAACH,EAAA,EAAIC,KAAL,CAAU4C,MAAO,CAAEC,gBAAiB,oBAAsB5C,GAAID,IAAME,GAAG,SAAvE,mBACA,cAACH,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,UAAvB,oBACA,cAACH,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,UAAvB,uBAEJ,cAAC4C,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKtD,UAAU,eAArC,UACI,uBACA,eAACuD,EAAA,EAAD,WACI,cAACA,EAAA,EAAKC,OAAN,wBAGA,cAACD,EAAA,EAAKE,KAAN,UACI,sBAAKzD,UAAU,OAAf,UACI,cAAC0D,EAAA,EAAKC,MAAN,CAAYC,SAAUjD,KAAKmB,2BAA4B+B,KAAK,WAAWrC,QAASb,KAAKE,MAAMC,cAAeQ,GAAG,yBAAyBwC,MAAM,eAC3InD,KAAKE,MAAMQ,YAAY0C,KAAI,SAAC9B,EAAM+B,GAAP,OACxB,cAACN,EAAA,EAAKC,MAAN,aAAoBC,SAAU,EAAKxB,kCAAmCyB,KAAK,WAAWC,MAAO7B,EAAKV,OAAWU,GAA5F+B,WAK7B,cAACT,EAAA,EAAKC,OAAN,wBAGA,cAACD,EAAA,EAAKE,KAAN,UACI,sBAAKzD,UAAU,OAAf,UACI,cAAC0D,EAAA,EAAKC,MAAN,CAAYC,SAAUjD,KAAK0B,wBAAyBwB,KAAK,WAAWrC,QAASb,KAAKE,MAAME,kBAAmBO,GAAG,qBAAqBwC,MAAM,eACxInD,KAAKE,MAAMY,QAAQsC,KAAI,SAAC9B,EAAM+B,GAAP,OACpB,cAACN,EAAA,EAAKC,MAAN,aAAoBC,SAAU,EAAKtB,+BAAgCuB,KAAK,WAAWC,MAAO7B,EAAKV,OAAWU,GAAzF+B,WAK7B,cAACT,EAAA,EAAKC,OAAN,kCAGA,cAACD,EAAA,EAAKE,KAAN,UACI,sBAAKzD,UAAU,OAAf,UACI,cAAC0D,EAAA,EAAKC,MAAN,CAAYC,SAAUjD,KAAK4B,2BAA4BsB,KAAK,WAAWrC,QAASb,KAAKE,MAAMK,oBAAqBI,GAAG,wBAAwBwC,MAAM,eAChJnD,KAAKE,MAAMa,WAAWqC,KAAI,SAAC9B,EAAM+B,GAAP,OACvB,cAACN,EAAA,EAAKC,MAAN,aAAoBC,SAAU,EAAKpB,kCAAmCqB,KAAK,WAAWC,MAAO7B,EAAKV,OAAWU,GAA5F+B,WAK7B,cAACT,EAAA,EAAKC,OAAN,kCAGA,cAACD,EAAA,EAAKE,KAAN,UACI,sBAAKzD,UAAU,OAAf,UACI,cAAC0D,EAAA,EAAKC,MAAN,CAAYC,SAAUjD,KAAK8B,gCAAiCoB,KAAK,WAAWrC,QAASb,KAAKE,MAAMI,wBAAyBK,GAAG,6BAA6BwC,MAAM,eAC9JnD,KAAKE,MAAMc,gBAAgBoC,KAAI,SAAC9B,EAAM+B,GAAP,OAC5B,cAACN,EAAA,EAAKC,MAAN,aAAoBC,SAAU,EAAKlB,uCAAwCmB,KAAK,WAAWC,MAAO7B,EAAKV,OAAWU,GAAjG+B,WAK7B,cAACT,EAAA,EAAKC,OAAN,kCAGA,cAACD,EAAA,EAAKE,KAAN,UACI,sBAAKzD,UAAU,OAAf,UACI,cAAC0D,EAAA,EAAKC,MAAN,CAAYC,SAAUjD,KAAKgC,+BAAgCkB,KAAK,WAAWrC,QAASb,KAAKE,MAAMM,oBAAqBG,GAAG,wBAAwBwC,MAAM,eACpJnD,KAAKE,MAAMe,eAAemC,KAAI,SAAC9B,EAAM+B,GAAP,OAC3B,cAACN,EAAA,EAAKC,MAAN,aAAoBC,SAAU,EAAKhB,sCAAuCiB,KAAK,WAAWC,MAAO7B,EAAKV,OAAWU,GAAhG+B,WAK7B,cAACT,EAAA,EAAKC,OAAN,kCAGA,cAACD,EAAA,EAAKE,KAAN,UACI,sBAAKzD,UAAU,OAAf,UACI,cAAC0D,EAAA,EAAKC,MAAN,CAAYC,SAAUjD,KAAKkC,8BAA+BgB,KAAK,WAAWrC,QAASb,KAAKE,MAAMO,mBAAoBE,GAAG,2BAA2BwC,MAAM,eACrJnD,KAAKE,MAAMgB,cAAckC,KAAI,SAAC9B,EAAM+B,GAAP,OAC1B,cAACN,EAAA,EAAKC,MAAN,aAAoBC,SAAU,EAAKd,qCAAsCe,KAAK,WAAWC,MAAO7B,EAAKV,OAAWU,GAA/F+B,iBAQrC,cAACb,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKtD,UAAU,sBAArC,SACI,qBAAKA,UAAU,YAAf,SACKiE,EAAWF,KAAI,SAACG,EAAMF,GACnB,OACI,qBAAahE,UAAU,yDAAvB,SACI,sBAAKA,UAAU,cAAf,UACI,6BAAKkE,EAAKA,OACV,6CAAgBA,EAAKC,UAAU,uBAA/B,eAAkDD,EAAKE,UAAU,uBAAjE,mBAAwFF,EAAKG,aAAa,uBAA1G,kBAAgIH,EAAKI,aAAa,uBAAlJ,0BAAgLJ,EAAKK,oBAAoBC,QAAQ,GAAjN,IAAqN,uBAArN,0BAAmPN,EAAKO,oBAAoBD,QAAQ,UAHlRR,sB,GA1Rf1D,aCHdoE,E,uKAGb,OACI,sBAAK1E,UAAU,aAAf,UACI,cAACC,EAAA,EAAD,UACI,4DAEJ,sBAAKD,UAAU,wBAAf,UACI,cAACE,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,WAAvB,qBACA,cAACH,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,SAAvB,mBACA,cAACH,EAAA,EAAIC,KAAL,CAAU4C,MAAO,CAAEC,gBAAiB,oBAAsB5C,GAAID,IAAME,GAAG,UAAvE,oBACA,cAACH,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,UAAvB,uBAEJ,qBAAKL,UAAU,qBAAf,SACI,2E,GAfgBM,a,QCGfqE,E,4MAEjB9D,MAAQ,CACJC,eAAe,EACfC,mBAAmB,EACnBC,iBAAiB,EACjBC,yBAAyB,EACzBC,qBAAqB,EACrBC,qBAAqB,EACrBE,YAAa,CACT,CAAEC,GAAI,EAAGC,MAAO,QAASC,SAAS,GAClC,CAAEF,GAAI,EAAGC,MAAO,SAAUC,SAAS,GACnC,CAAEF,GAAI,EAAGC,MAAO,UAAWC,SAAS,GACpC,CAAEF,GAAI,EAAGC,MAAO,UAAWC,SAAS,GACpC,CAAEF,GAAI,EAAGC,MAAO,OAAQC,SAAS,IAErCC,QAAS,CACL,CAAEH,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,MAAOC,SAAS,IAErCE,WAAY,CACR,CAAEJ,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,WAAYC,SAAS,GACtC,CAAEF,GAAI,GAAIC,MAAO,YAAaC,SAAS,GACvC,CAAEF,GAAI,GAAIC,MAAO,YAAaC,SAAS,GACvC,CAAEF,GAAI,GAAIC,MAAO,YAAaC,SAAS,GACvC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,IAEvCG,gBAAiB,CACb,CAAEL,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,WAAYC,SAAS,GACtC,CAAEF,GAAI,GAAIC,MAAO,YAAaC,SAAS,GACvC,CAAEF,GAAI,GAAIC,MAAO,YAAaC,SAAS,GACvC,CAAEF,GAAI,GAAIC,MAAO,YAAaC,SAAS,GACvC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,IAEvCI,eAAgB,CACZ,CAAEN,GAAI,GAAIC,MAAO,OAAQC,SAAS,GAClC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,MAAOC,SAAS,K,EAIzCM,2BAA6B,SAACC,GAC1B,IAAIV,EAAc,EAAKR,MAAMQ,YAC7BA,EAAYW,SAAQ,SAAAC,GAAI,OAAIA,EAAKT,QAAUO,EAAMG,OAAOV,WACxD,EAAKW,SAAS,CACVd,YAAaA,EACbP,cAAeiB,EAAMG,OAAOV,W,EAIpCY,kCAAoC,SAACL,GACjC,IAAIV,EAAc,EAAKR,MAAMQ,YAC7BA,EAAYW,SAAQ,SAAAC,GACZA,EAAKV,QAAUQ,EAAMG,OAAOX,QAC5BU,EAAKT,QAAUO,EAAMG,OAAOV,UAEX,IAAjBS,EAAKT,SACL,EAAKW,SAAS,CAAErB,eAAe,OAGvC,EAAKqB,SAAS,CAAEd,YAAaA,K,EAEjCgB,wBAA0B,SAACN,GACvB,IAAIN,EAAU,EAAKZ,MAAMY,QACzBA,EAAQO,SAAQ,SAAAC,GAAI,OAAIA,EAAKT,QAAUO,EAAMG,OAAOV,WACpD,EAAKW,SAAS,CACVV,QAASA,EACTV,kBAAmBgB,EAAMG,OAAOV,W,EAIxCc,+BAAiC,SAACP,GAC9B,IAAIN,EAAU,EAAKZ,MAAMY,QACzBA,EAAQO,SAAQ,SAAAC,GACRA,EAAKV,QAAUQ,EAAMG,OAAOX,QAC5BU,EAAKT,QAAUO,EAAMG,OAAOV,UAEX,IAAjBS,EAAKT,SACL,EAAKW,SAAS,CAAEpB,mBAAmB,OAG3C,EAAKoB,SAAS,CAAEV,QAASA,K,EAG7Bc,2BAA6B,SAACR,GAC1B,IAAIL,EAAa,EAAKb,MAAMa,WAC5BA,EAAWM,SAAQ,SAAAC,GAAI,OAAIA,EAAKT,QAAUO,EAAMG,OAAOV,WACvD,EAAKW,SAAS,CACVT,WAAYA,EACZR,oBAAqBa,EAAMG,OAAOV,W,EAI1CgB,kCAAoC,SAACT,GACjC,IAAIL,EAAa,EAAKb,MAAMa,WAC5BA,EAAWM,SAAQ,SAAAC,GACXA,EAAKV,QAAUQ,EAAMG,OAAOX,QAC5BU,EAAKT,QAAUO,EAAMG,OAAOV,UAEX,IAAjBS,EAAKT,SACL,EAAKW,SAAS,CAAEjB,qBAAqB,OAG7C,EAAKiB,SAAS,CAAET,WAAYA,K,EAGhCe,gCAAkC,SAACV,GAC/B,IAAIJ,EAAkB,EAAKd,MAAMc,gBACjCA,EAAgBK,SAAQ,SAAAC,GAAI,OAAIA,EAAKT,QAAUO,EAAMG,OAAOV,WAC5D,EAAKW,SAAS,CACVR,gBAAiBA,EACjBV,wBAAyBc,EAAMG,OAAOV,W,EAI9CkB,uCAAyC,SAACX,GACtC,IAAIJ,EAAkB,EAAKd,MAAMc,gBACjCA,EAAgBK,SAAQ,SAAAC,GAChBA,EAAKV,QAAUQ,EAAMG,OAAOX,QAC5BU,EAAKT,QAAUO,EAAMG,OAAOV,UAEX,IAAjBS,EAAKT,SACL,EAAKW,SAAS,CAAElB,yBAAyB,OAGjD,EAAKkB,SAAS,CAAER,gBAAiBA,K,EAGrCgB,+BAAiC,SAACZ,GAC9B,IAAIH,EAAiB,EAAKf,MAAMe,eAChCA,EAAeI,SAAQ,SAAAC,GAAI,OAAIA,EAAKT,QAAUO,EAAMG,OAAOV,WAC3D,EAAKW,SAAS,CACVP,eAAgBA,EAChBT,oBAAqBY,EAAMG,OAAOV,W,EAI1CoB,sCAAwC,SAACb,GACrC,IAAIH,EAAiB,EAAKf,MAAMe,eAChCA,EAAeI,SAAQ,SAAAC,GACfA,EAAKV,QAAUQ,EAAMG,OAAOX,QAC5BU,EAAKT,QAAUO,EAAMG,OAAOV,UAEX,IAAjBS,EAAKT,SACL,EAAKW,SAAS,CAAEhB,qBAAqB,OAG7C,EAAKgB,SAAS,CAAEP,eAAgBA,K,uDAG1B,IAAD,OACL,OACI,sBAAK5B,UAAU,aAAf,UACI,cAACC,EAAA,EAAD,UACI,6DAEJ,sBAAKD,UAAU,wBAAf,UACI,cAACE,EAAA,EAAIC,KAAL,CAAU4C,MAAO,CAAEC,gBAAiB,oBAAsB5C,GAAID,IAAME,GAAG,WAAvE,qBACA,cAACH,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,SAAvB,mBACA,cAACH,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,UAAvB,oBACA,cAACH,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,UAAvB,uBAEJ,cAAC4C,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKtD,UAAU,eAArC,UACI,uBACA,eAACuD,EAAA,EAAD,WACI,cAACA,EAAA,EAAKC,OAAN,0BAGA,cAACD,EAAA,EAAKE,KAAN,UACI,sBAAKzD,UAAU,OAAf,UACI,cAAC0D,EAAA,EAAKC,MAAN,CAAYC,SAAUjD,KAAKmB,2BAA4B+B,KAAK,WAAWrC,QAASb,KAAKE,MAAMC,cAAeQ,GAAG,yBAAyBwC,MAAM,eAC3InD,KAAKE,MAAMQ,YAAY0C,KAAI,SAAC9B,EAAM+B,GAAP,OACxB,cAACN,EAAA,EAAKC,MAAN,aAAoBC,SAAU,EAAKxB,kCAAmCyB,KAAK,WAAWC,MAAO7B,EAAKV,OAAWU,GAA5F+B,WAK7B,cAACT,EAAA,EAAKC,OAAN,sBAGA,cAACD,EAAA,EAAKE,KAAN,UACI,sBAAKzD,UAAU,OAAf,UACI,cAAC0D,EAAA,EAAKC,MAAN,CAAYC,SAAUjD,KAAK0B,wBAAyBwB,KAAK,WAAWrC,QAASb,KAAKE,MAAME,kBAAmBO,GAAG,qBAAqBwC,MAAM,eACxInD,KAAKE,MAAMY,QAAQsC,KAAI,SAAC9B,EAAM+B,GAAP,OACpB,cAACN,EAAA,EAAKC,MAAN,aAAoBC,SAAU,EAAKtB,+BAAgCuB,KAAK,WAAWC,MAAO7B,EAAKV,OAAWU,GAAzF+B,WAK7B,cAACT,EAAA,EAAKC,OAAN,yBAGA,cAACD,EAAA,EAAKE,KAAN,UACI,sBAAKzD,UAAU,OAAf,UACI,cAAC0D,EAAA,EAAKC,MAAN,CAAYC,SAAUjD,KAAK4B,2BAA4BsB,KAAK,WAAWrC,QAASb,KAAKE,MAAMK,oBAAqBI,GAAG,wBAAwBwC,MAAM,eAChJnD,KAAKE,MAAMa,WAAWqC,KAAI,SAAC9B,EAAM+B,GAAP,OACvB,cAACN,EAAA,EAAKC,MAAN,aAAoBC,SAAU,EAAKpB,kCAAmCqB,KAAK,WAAWC,MAAO7B,EAAKV,OAAWU,GAA5F+B,WAK7B,cAACT,EAAA,EAAKC,OAAN,2CAGA,cAACD,EAAA,EAAKE,KAAN,UACI,sBAAKzD,UAAU,OAAf,UACI,cAAC0D,EAAA,EAAKC,MAAN,CAAYC,SAAUjD,KAAK8B,gCAAiCoB,KAAK,WAAWrC,QAASb,KAAKE,MAAMI,wBAAyBK,GAAG,6BAA6BwC,MAAM,eAC9JnD,KAAKE,MAAMc,gBAAgBoC,KAAI,SAAC9B,EAAM+B,GAAP,OAC5B,cAACN,EAAA,EAAKC,MAAN,aAAoBC,SAAU,EAAKlB,uCAAwCmB,KAAK,WAAWC,MAAO7B,EAAKV,OAAWU,GAAjG+B,WAK7B,cAACT,EAAA,EAAKC,OAAN,mCAGA,cAACD,EAAA,EAAKE,KAAN,UACI,sBAAKzD,UAAU,OAAf,UACI,cAAC0D,EAAA,EAAKC,MAAN,CAAYC,SAAUjD,KAAKgC,+BAAgCkB,KAAK,WAAWrC,QAASb,KAAKE,MAAMM,oBAAqBG,GAAG,wBAAwBwC,MAAM,eACpJnD,KAAKE,MAAMe,eAAemC,KAAI,SAAC9B,EAAM+B,GAAP,OAC3B,cAACN,EAAA,EAAKC,MAAN,aAAoBC,SAAU,EAAKhB,sCAAuCiB,KAAK,WAAWC,MAAO7B,EAAKV,OAAWU,GAAhG+B,iBAOrC,cAACb,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKtD,UAAU,wBAArC,SACI,qBAAKA,UAAU,YAAf,SACK4E,EAAab,KAAI,SAACc,EAAQb,GACvB,OACI,qBAAahE,UAAU,yDAAvB,SACI,sBAAKA,UAAU,eAAf,UACI,6BAAK6E,EAAOC,cACZ,uCAAUD,EAAOE,IAAI,uBAArB,kBAA2CF,EAAOG,aAAa,uBAA/D,oBAAuFH,EAAOI,cAAc,uBAA5G,aAA6HJ,EAAOK,eAHlIlB,sB,GAjPb1D,a,QCAhB6E,E,4MAEjBtE,MAAQ,CACJC,eAAe,EACfC,mBAAmB,EACnBC,iBAAiB,EACjBC,yBAAyB,EACzBC,qBAAqB,EACrBC,qBAAqB,EACrBE,YAAa,CACT,CAAEC,GAAI,GAAIC,MAAO,SAAUC,SAAS,GACpC,CAAEF,GAAI,GAAIC,MAAO,YAAaC,SAAS,GACvC,CAAEF,GAAI,GAAIC,MAAO,YAAaC,SAAS,GACvC,CAAEF,GAAI,GAAIC,MAAO,YAAaC,SAAS,GACvC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,IAEvCC,QAAS,CACL,CAAEH,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,UAAWC,SAAS,GACrC,CAAEF,GAAI,GAAIC,MAAO,UAAWC,SAAS,GACrC,CAAEF,GAAI,GAAIC,MAAO,UAAWC,SAAS,GACrC,CAAEF,GAAI,GAAIC,MAAO,OAAQC,SAAS,IAEtCE,WAAY,CACR,CAAEJ,GAAI,GAAIC,MAAO,MAAOC,SAAS,GACjC,CAAEF,GAAI,GAAIC,MAAO,OAAQC,SAAS,GAClC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,MAAOC,SAAS,IAErCG,gBAAiB,CACb,CAAEL,GAAI,GAAIC,MAAO,MAAOC,SAAS,GACjC,CAAEF,GAAI,GAAIC,MAAO,OAAQC,SAAS,GAClC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,MAAOC,SAAS,IAErCI,eAAgB,CACZ,CAAEN,GAAI,GAAIC,MAAO,MAAOC,SAAS,GACjC,CAAEF,GAAI,GAAIC,MAAO,OAAQC,SAAS,GAClC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,QAASC,SAAS,GACnC,CAAEF,GAAI,GAAIC,MAAO,MAAOC,SAAS,K,EAIzCM,2BAA6B,SAACC,GAC1B,IAAIV,EAAc,EAAKR,MAAMQ,YAC7BA,EAAYW,SAAQ,SAAAC,GAAI,OAAIA,EAAKT,QAAUO,EAAMG,OAAOV,WACxD,EAAKW,SAAS,CACVd,YAAaA,EACbP,cAAeiB,EAAMG,OAAOV,W,EAIpCY,kCAAoC,SAACL,GACjC,IAAIV,EAAc,EAAKR,MAAMQ,YAC7BA,EAAYW,SAAQ,SAAAC,GACZA,EAAKV,QAAUQ,EAAMG,OAAOX,QAC5BU,EAAKT,QAAUO,EAAMG,OAAOV,UAEX,IAAjBS,EAAKT,SACL,EAAKW,SAAS,CAAErB,eAAe,OAGvC,EAAKqB,SAAS,CAAEd,YAAaA,K,EAEjCgB,wBAA0B,SAACN,GACvB,IAAIN,EAAU,EAAKZ,MAAMY,QACzBA,EAAQO,SAAQ,SAAAC,GAAI,OAAIA,EAAKT,QAAUO,EAAMG,OAAOV,WACpD,EAAKW,SAAS,CACVV,QAASA,EACTV,kBAAmBgB,EAAMG,OAAOV,W,EAIxCc,+BAAiC,SAACP,GAC9B,IAAIN,EAAU,EAAKZ,MAAMY,QACzBA,EAAQO,SAAQ,SAAAC,GACRA,EAAKV,QAAUQ,EAAMG,OAAOX,QAC5BU,EAAKT,QAAUO,EAAMG,OAAOV,UAEX,IAAjBS,EAAKT,SACL,EAAKW,SAAS,CAAEpB,mBAAmB,OAG3C,EAAKoB,SAAS,CAAEV,QAASA,K,EAG7Bc,2BAA6B,SAACR,GAC1B,IAAIL,EAAa,EAAKb,MAAMa,WAC5BA,EAAWM,SAAQ,SAAAC,GAAI,OAAIA,EAAKT,QAAUO,EAAMG,OAAOV,WACvD,EAAKW,SAAS,CACVT,WAAYA,EACZR,oBAAqBa,EAAMG,OAAOV,W,EAI1CgB,kCAAoC,SAACT,GACjC,IAAIL,EAAa,EAAKb,MAAMa,WAC5BA,EAAWM,SAAQ,SAAAC,GACXA,EAAKV,QAAUQ,EAAMG,OAAOX,QAC5BU,EAAKT,QAAUO,EAAMG,OAAOV,UAEX,IAAjBS,EAAKT,SACL,EAAKW,SAAS,CAAEjB,qBAAqB,OAG7C,EAAKiB,SAAS,CAAET,WAAYA,K,EAGhCe,gCAAkC,SAACV,GAC/B,IAAIJ,EAAkB,EAAKd,MAAMc,gBACjCA,EAAgBK,SAAQ,SAAAC,GAAI,OAAIA,EAAKT,QAAUO,EAAMG,OAAOV,WAC5D,EAAKW,SAAS,CACVR,gBAAiBA,EACjBV,wBAAyBc,EAAMG,OAAOV,W,EAI9CkB,uCAAyC,SAACX,GACtC,IAAIJ,EAAkB,EAAKd,MAAMc,gBACjCA,EAAgBK,SAAQ,SAAAC,GAChBA,EAAKV,QAAUQ,EAAMG,OAAOX,QAC5BU,EAAKT,QAAUO,EAAMG,OAAOV,UAEX,IAAjBS,EAAKT,SACL,EAAKW,SAAS,CAAElB,yBAAyB,OAGjD,EAAKkB,SAAS,CAAER,gBAAiBA,K,EAGrCgB,+BAAiC,SAACZ,GAC9B,IAAIH,EAAiB,EAAKf,MAAMe,eAChCA,EAAeI,SAAQ,SAAAC,GAAI,OAAIA,EAAKT,QAAUO,EAAMG,OAAOV,WAC3D,EAAKW,SAAS,CACVP,eAAgBA,EAChBT,oBAAqBY,EAAMG,OAAOV,W,EAI1CoB,sCAAwC,SAACb,GACrC,IAAIH,EAAiB,EAAKf,MAAMe,eAChCA,EAAeI,SAAQ,SAAAC,GACfA,EAAKV,QAAUQ,EAAMG,OAAOX,QAC5BU,EAAKT,QAAUO,EAAMG,OAAOV,UAEX,IAAjBS,EAAKT,SACL,EAAKW,SAAS,CAAEhB,qBAAqB,OAG7C,EAAKgB,SAAS,CAAEP,eAAgBA,K,uDAG1B,IAAD,OACL,OACI,sBAAK5B,UAAU,aAAf,UACI,cAACC,EAAA,EAAD,UACI,4DAEJ,sBAAKD,UAAU,wBAAf,UACI,cAACE,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,WAAvB,qBACA,cAACH,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,SAAvB,mBACA,cAACH,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,UAAvB,oBACA,cAACH,EAAA,EAAIC,KAAL,CAAU4C,MAAO,CAAEC,gBAAiB,oBAAsB5C,GAAID,IAAME,GAAG,UAAvE,uBAEJ,cAAC4C,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKtD,UAAU,eAArC,UACI,uBACA,eAACuD,EAAA,EAAD,WACI,cAACA,EAAA,EAAKC,OAAN,0BAGA,cAACD,EAAA,EAAKE,KAAN,UACI,sBAAKzD,UAAU,OAAf,UACI,cAAC0D,EAAA,EAAKC,MAAN,CAAYC,SAAUjD,KAAKmB,2BAA4B+B,KAAK,WAAWrC,QAASb,KAAKE,MAAMC,cAAeQ,GAAG,yBAAyBwC,MAAM,eAC3InD,KAAKE,MAAMQ,YAAY0C,KAAI,SAAC9B,EAAM+B,GAAP,OACxB,cAACN,EAAA,EAAKC,MAAN,aAAoBC,SAAU,EAAKxB,kCAAmCyB,KAAK,WAAWC,MAAO7B,EAAKV,OAAWU,GAA5F+B,WAK7B,cAACT,EAAA,EAAKC,OAAN,4BAGA,cAACD,EAAA,EAAKE,KAAN,UACI,sBAAKzD,UAAU,OAAf,UACI,cAAC0D,EAAA,EAAKC,MAAN,CAAYC,SAAUjD,KAAK0B,wBAAyBwB,KAAK,WAAWrC,QAASb,KAAKE,MAAME,kBAAmBO,GAAG,qBAAqBwC,MAAM,eACxInD,KAAKE,MAAMY,QAAQsC,KAAI,SAAC9B,EAAM+B,GAAP,OACpB,cAACN,EAAA,EAAKC,MAAN,aAAoBC,SAAU,EAAKtB,+BAAgCuB,KAAK,WAAWC,MAAO7B,EAAKV,OAAWU,GAAzF+B,WAK7B,cAACT,EAAA,EAAKC,OAAN,2BAGA,cAACD,EAAA,EAAKE,KAAN,UACI,sBAAKzD,UAAU,OAAf,UACI,cAAC0D,EAAA,EAAKC,MAAN,CAAYC,SAAUjD,KAAK4B,2BAA4BsB,KAAK,WAAWrC,QAASb,KAAKE,MAAMK,oBAAqBI,GAAG,wBAAwBwC,MAAM,eAChJnD,KAAKE,MAAMa,WAAWqC,KAAI,SAAC9B,EAAM+B,GAAP,OACvB,cAACN,EAAA,EAAKC,MAAN,aAAoBC,SAAU,EAAKpB,kCAAmCqB,KAAK,WAAWC,MAAO7B,EAAKV,OAAWU,GAA5F+B,WAK7B,cAACT,EAAA,EAAKC,OAAN,gDAGA,cAACD,EAAA,EAAKE,KAAN,UACI,sBAAKzD,UAAU,OAAf,UACI,cAAC0D,EAAA,EAAKC,MAAN,CAAYC,SAAUjD,KAAK8B,gCAAiCoB,KAAK,WAAWrC,QAASb,KAAKE,MAAMI,wBAAyBK,GAAG,6BAA6BwC,MAAM,eAC9JnD,KAAKE,MAAMc,gBAAgBoC,KAAI,SAAC9B,EAAM+B,GAAP,OAC5B,cAACN,EAAA,EAAKC,MAAN,aAAoBC,SAAU,EAAKlB,uCAAwCmB,KAAK,WAAWC,MAAO7B,EAAKV,OAAWU,GAAjG+B,WAK7B,cAACT,EAAA,EAAKC,OAAN,wCAGA,cAACD,EAAA,EAAKE,KAAN,UACI,sBAAKzD,UAAU,OAAf,UACI,cAAC0D,EAAA,EAAKC,MAAN,CAAYC,SAAUjD,KAAKgC,+BAAgCkB,KAAK,WAAWrC,QAASb,KAAKE,MAAMM,oBAAqBG,GAAG,wBAAwBwC,MAAM,eACpJnD,KAAKE,MAAMe,eAAemC,KAAI,SAAC9B,EAAM+B,GAAP,OAC3B,cAACN,EAAA,EAAKC,MAAN,aAAoBC,SAAU,EAAKhB,sCAAuCiB,KAAK,WAAWC,MAAO7B,EAAKV,OAAWU,GAAhG+B,iBAQrC,cAACb,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKtD,UAAU,sBAArC,SACI,qBAAKA,UAAU,YAAf,SACKoF,EAAYrB,KAAI,SAACsB,EAAOrB,GACrB,OACI,qBAAahE,UAAU,yDAAvB,SACI,sBAAKA,UAAU,eAAf,UACI,6BAAKqF,EAAMA,QACX,yDAHErB,sB,GAlPd1D,aCgBrBgF,G,6KAfX,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW1F,IACjC,cAAC,IAAD,CAAOwF,KAAK,QAAQC,OAAK,EAACC,UAAW1F,IACrC,cAAC,IAAD,CAAOwF,KAAK,WAAWC,OAAK,EAACC,UAAWd,IACxC,cAAC,IAAD,CAAOY,KAAK,SAASC,OAAK,EAACC,UAAW7E,IACtC,cAAC,IAAD,CAAO2E,KAAK,UAAUC,OAAK,EAACC,UAAWN,IACvC,cAAC,IAAD,CAAOI,KAAK,UAAUC,OAAK,EAACC,UAAWf,W,GAX7BpE,cCDlBoF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.44bcb194.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nexport default class Home extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Atlan-body\">\r\n                <Helmet>\r\n                    <title>ATLAN-Search The IPL</title>\r\n                </Helmet>\r\n                <div className=\"Atlan-body-content\">\r\n                    <h1>Welcome to ATLAN-Search the IPL!!</h1>\r\n                    <h2>What do you want to searh today?</h2>\r\n                    <Nav.Link as={Link} to=\"/Players\">Players</Nav.Link>\r\n                    <Nav.Link as={Link} to=\"/Teams\">Teams</Nav.Link>\r\n                    <Nav.Link as={Link} to=\"/Owners\">Owners</Nav.Link>\r\n                    <Nav.Link as={Link} to=\"/Venues\">Venues</Nav.Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport \"./App.css\";\r\n\r\nexport default class Home extends Component {\r\n\r\n    gotohome = () => {\r\n        window.location = \"/ATLAN-Search-The-IPL\"\r\n    }\r\n    render() {\r\n        return (\r\n            <header className=\"Atlan-header\">\r\n                <h2 onClick={this.gotohome}>ATLAN-Search the IPL </h2>\r\n            </header>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { Form, Container, Row, Col, Card } from 'react-bootstrap';\r\nimport \"./App.css\";\r\nimport Teams_Data from './Teams.json'\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nexport default class Teams extends Component {\r\n\r\n    state = {\r\n        checkedcatall: true,\r\n        checkedAverageall: true,\r\n        checkedhumidall: true,\r\n        checkednumberofballsall: true,\r\n        checkedtotalrunsall: true,\r\n        checkednumberofouts: true,\r\n        checkedawaywinperc: true,\r\n        StrikeRates: [\r\n            { id: 50, value: \"0-10\", checked: true },\r\n            { id: 52, value: \"1-20\", checked: true },\r\n            { id: 53, value: \"20-30\", checked: true },\r\n            { id: 54, value: \"30-40\", checked: true },\r\n            { id: 55, value: \"40+\", checked: true },\r\n        ],\r\n        Average: [\r\n            { id: 56, value: \"0-10\", checked: true },\r\n            { id: 57, value: \"10-20\", checked: true },\r\n            { id: 58, value: \"20-30\", checked: true },\r\n            { id: 59, value: \"30-40\", checked: true },\r\n            { id: 60, value: \"40+\", checked: true },\r\n        ],\r\n        Total_Runs: [\r\n            { id: 61, value: \"0-20\", checked: true },\r\n            { id: 62, value: \"20-40\", checked: true },\r\n            { id: 63, value: \"40-60\", checked: true },\r\n            { id: 64, value: \"60-80\", checked: true },\r\n            { id: 65, value: \"80-100\", checked: true },\r\n            { id: 66, value: \"100+\", checked: true },\r\n        ],\r\n        Number_of_balls: [\r\n            { id: 67, value: \"0-20\", checked: true },\r\n            { id: 68, value: \"20-40\", checked: true },\r\n            { id: 69, value: \"40-60\", checked: true },\r\n            { id: 70, value: \"60-80\", checked: true },\r\n            { id: 71, value: \"80-100\", checked: true },\r\n            { id: 72, value: \"100+\", checked: true },\r\n        ],\r\n        Number_of_outs: [\r\n            { id: 73, value: \"0-20\", checked: true },\r\n            { id: 74, value: \"20-40\", checked: true },\r\n            { id: 75, value: \"40-60\", checked: true },\r\n            { id: 76, value: \"60-80\", checked: true },\r\n            { id: 77, value: \"80-100\", checked: true }\r\n        ],\r\n        Away_Win_Perc: [\r\n            { id: 79, value: \"0-20\", checked: true },\r\n            { id: 80, value: \"20-40\", checked: true },\r\n            { id: 81, value: \"40-60\", checked: true },\r\n            { id: 82, value: \"60-80\", checked: true },\r\n            { id: 83, value: \"80-100\", checked: true }\r\n        ]\r\n    }\r\n\r\n    handleAllCheckedStrikeRate = (event) => {\r\n        let StrikeRates = this.state.StrikeRates\r\n        StrikeRates.forEach(item => item.checked = event.target.checked)\r\n        this.setState({\r\n            StrikeRates: StrikeRates,\r\n            checkedcatall: event.target.checked\r\n        })\r\n    }\r\n\r\n    handleCheckChildElementStrikeRate = (event) => {\r\n        let StrikeRates = this.state.StrikeRates\r\n        StrikeRates.forEach(item => {\r\n            if (item.value === event.target.value) {\r\n                item.checked = event.target.checked\r\n            }\r\n            if (item.checked === false) {\r\n                this.setState({ checkedcatall: false })\r\n            }\r\n        })\r\n        this.setState({ StrikeRates: StrikeRates })\r\n    }\r\n    handleAllCheckedAverage = (event) => {\r\n        let Average = this.state.Average\r\n        Average.forEach(item => item.checked = event.target.checked)\r\n        this.setState({\r\n            Average: Average,\r\n            checkedAverageall: event.target.checked\r\n        })\r\n    }\r\n\r\n    handleCheckChildElementAverage = (event) => {\r\n        let Average = this.state.Average\r\n        Average.forEach(item => {\r\n            if (item.value === event.target.value) {\r\n                item.checked = event.target.checked\r\n            }\r\n            if (item.checked === false) {\r\n                this.setState({ checkedAverageall: false })\r\n            }\r\n        })\r\n        this.setState({ Average: Average })\r\n    }\r\n\r\n    handleAllCheckedTotal_Runs = (event) => {\r\n        let Total_Runs = this.state.Total_Runs\r\n        Total_Runs.forEach(item => item.checked = event.target.checked)\r\n        this.setState({\r\n            Total_Runs: Total_Runs,\r\n            checkedtotalrunsall: event.target.checked\r\n        })\r\n    }\r\n\r\n    handleCheckChildElementTotal_Runs = (event) => {\r\n        let Total_Runs = this.state.Total_Runs\r\n        Total_Runs.forEach(item => {\r\n            if (item.value === event.target.value) {\r\n                item.checked = event.target.checked\r\n            }\r\n            if (item.checked === false) {\r\n                this.setState({ checkedtotalrunsall: false })\r\n            }\r\n        })\r\n        this.setState({ Total_Runs: Total_Runs })\r\n    }\r\n\r\n    handleAllCheckedNumber_of_balls = (event) => {\r\n        let Number_of_balls = this.state.Number_of_balls\r\n        Number_of_balls.forEach(item => item.checked = event.target.checked)\r\n        this.setState({\r\n            Number_of_balls: Number_of_balls,\r\n            checkednumberofballsall: event.target.checked\r\n        })\r\n    }\r\n\r\n    handleCheckChildElementNumber_of_balls = (event) => {\r\n        let Number_of_balls = this.state.Number_of_balls\r\n        Number_of_balls.forEach(item => {\r\n            if (item.value === event.target.value) {\r\n                item.checked = event.target.checked\r\n            }\r\n            if (item.checked === false) {\r\n                this.setState({ checkednumberofballsall: false })\r\n            }\r\n        })\r\n        this.setState({ Number_of_balls: Number_of_balls })\r\n    }\r\n\r\n    handleAllCheckedNumber_of_outs = (event) => {\r\n        let Number_of_outs = this.state.Number_of_outs\r\n        Number_of_outs.forEach(item => item.checked = event.target.checked)\r\n        this.setState({\r\n            Number_of_outs: Number_of_outs,\r\n            checkednumberofouts: event.target.checked\r\n        })\r\n    }\r\n\r\n    handleCheckChildElementNumber_of_outs = (event) => {\r\n        let Number_of_outs = this.state.Number_of_outs\r\n        Number_of_outs.forEach(item => {\r\n            if (item.value === event.target.value) {\r\n                item.checked = event.target.checked\r\n            }\r\n            if (item.checked === false) {\r\n                this.setState({ checkednumberofouts: false })\r\n            }\r\n        })\r\n        this.setState({ Number_of_outs: Number_of_outs })\r\n    }\r\n    handleAllCheckedAway_Win_Perc = (event) => {\r\n        let Away_Win_Perc = this.state.Away_Win_Perc\r\n        Away_Win_Perc.forEach(item => item.checked = event.target.checked)\r\n        this.setState({\r\n            Away_Win_Perc: Away_Win_Perc,\r\n            checkedawaywinperc: event.target.checked\r\n        })\r\n    }\r\n\r\n    handleCheckChildElementAway_Win_Perc = (event) => {\r\n        let Away_Win_Perc = this.state.Away_Win_Perc\r\n        Away_Win_Perc.forEach(item => {\r\n            if (item.value === event.target.value) {\r\n                item.checked = event.target.checked\r\n            }\r\n            if (item.checked === false) {\r\n                this.setState({ checkedawaywinperc: false })\r\n            }\r\n        })\r\n        this.setState({ Away_Win_Perc: Away_Win_Perc })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Atlan-body\">\r\n                <Helmet>\r\n                    <title>Search The IPL-Teams</title>\r\n                </Helmet>\r\n                <div className=\"atlan-display-buttons\">\r\n                    <Nav.Link as={Link} to=\"/Players\">Players</Nav.Link>\r\n                    <Nav.Link style={{ backgroundColor: \"rgb(132 139 152)\" }} as={Link} to=\"/Teams\">Teams</Nav.Link>\r\n                    <Nav.Link as={Link} to=\"/Owners\">Owners</Nav.Link>\r\n                    <Nav.Link as={Link} to=\"/Venues\">Venues</Nav.Link>\r\n                </div>\r\n                <Container>\r\n                    <Row>\r\n                        <Col sm=\"6\" lg=\"3\" xs=\"12\" className=\"mx-auto mt-2\">\r\n                            <br />\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    Home Wins\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <div className=\"pl-2\">\r\n                                        <Form.Check onChange={this.handleAllCheckedStrikeRate} type=\"checkbox\" checked={this.state.checkedcatall} id=\"Select All StrikeRates\" label=\"Select All\" />\r\n                                        {this.state.StrikeRates.map((item, i) =>\r\n                                            <Form.Check key={i} onChange={this.handleCheckChildElementStrikeRate} type=\"checkbox\" label={item.value} {...item} />\r\n                                        )}\r\n                                    </div>\r\n                                </Card.Body>\r\n\r\n                                <Card.Header>\r\n                                    Away Wins\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <div className=\"pl-2\">\r\n                                        <Form.Check onChange={this.handleAllCheckedAverage} type=\"checkbox\" checked={this.state.checkedAverageall} id=\"Select All Average\" label=\"Select All\" />\r\n                                        {this.state.Average.map((item, i) =>\r\n                                            <Form.Check key={i} onChange={this.handleCheckChildElementAverage} type=\"checkbox\" label={item.value} {...item} />\r\n                                        )}\r\n                                    </div>\r\n                                </Card.Body>\r\n\r\n                                <Card.Header>\r\n                                    Home Matches Played\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <div className=\"pl-2\">\r\n                                        <Form.Check onChange={this.handleAllCheckedTotal_Runs} type=\"checkbox\" checked={this.state.checkedtotalrunsall} id=\"Select All Total_Runs\" label=\"Select All\" />\r\n                                        {this.state.Total_Runs.map((item, i) =>\r\n                                            <Form.Check key={i} onChange={this.handleCheckChildElementTotal_Runs} type=\"checkbox\" label={item.value} {...item} />\r\n                                        )}\r\n                                    </div>\r\n                                </Card.Body>\r\n\r\n                                <Card.Header>\r\n                                    Away Matches Played\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <div className=\"pl-2\">\r\n                                        <Form.Check onChange={this.handleAllCheckedNumber_of_balls} type=\"checkbox\" checked={this.state.checkednumberofballsall} id=\"Select All Number_of_balls\" label=\"Select All\" />\r\n                                        {this.state.Number_of_balls.map((item, i) =>\r\n                                            <Form.Check key={i} onChange={this.handleCheckChildElementNumber_of_balls} type=\"checkbox\" label={item.value} {...item} />\r\n                                        )}\r\n                                    </div>\r\n                                </Card.Body>\r\n\r\n                                <Card.Header>\r\n                                    Home Win Percentage\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <div className=\"pl-2\">\r\n                                        <Form.Check onChange={this.handleAllCheckedNumber_of_outs} type=\"checkbox\" checked={this.state.checkednumberofouts} id=\"Select All Total_Outs\" label=\"Select All\" />\r\n                                        {this.state.Number_of_outs.map((item, i) =>\r\n                                            <Form.Check key={i} onChange={this.handleCheckChildElementNumber_of_outs} type=\"checkbox\" label={item.value} {...item} />\r\n                                        )}\r\n                                    </div>\r\n                                </Card.Body>\r\n\r\n                                <Card.Header>\r\n                                    Away Win Percentage\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <div className=\"pl-2\">\r\n                                        <Form.Check onChange={this.handleAllCheckedAway_Win_Perc} type=\"checkbox\" checked={this.state.checkedawaywinperc} id=\"Select All Away Win Perc\" label=\"Select All\" />\r\n                                        {this.state.Away_Win_Perc.map((item, i) =>\r\n                                            <Form.Check key={i} onChange={this.handleCheckChildElementAway_Win_Perc} type=\"checkbox\" label={item.value} {...item} />\r\n                                        )}\r\n                                    </div>\r\n                                </Card.Body>\r\n\r\n                            </Card>\r\n\r\n                        </Col>\r\n                        <Col sm=\"6\" lg=\"9\" xs=\"12\" className=\"atlan-display-teams\">\r\n                            <div className=\"col-lg-12\">\r\n                                {Teams_Data.map((team, i) => {\r\n                                    return (\r\n                                        <div key={i} className=\" col-lg-4 col-md-12 col-sm-12 col-9 d-inline-flex mb-4\" >\r\n                                            <div className=\"atlan-teams\">\r\n                                                <h3>{team.team}</h3>\r\n                                                <p>Home Wins - {team.home_wins}<br />Away Wins - {team.away_wins}<br /> Home Matches - {team.home_matches}<br />Away Matches - {team.away_matches}<br /> Home Win Percentage - {team.home_win_percentage.toFixed(2)} <br /> Away Win Percentage - {team.away_win_percentage.toFixed(2)}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nexport default class Owners extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Atlan-body\">\r\n                <Helmet>\r\n                    <title>Search The IPL-Owners</title>\r\n                </Helmet>\r\n                <div className=\"atlan-display-buttons\">\r\n                    <Nav.Link as={Link} to=\"/Players\">Players</Nav.Link>\r\n                    <Nav.Link as={Link} to=\"/Teams\">Teams</Nav.Link>\r\n                    <Nav.Link style={{ backgroundColor: \"rgb(132 139 152)\" }} as={Link} to=\"/Owners\">Owners</Nav.Link>\r\n                    <Nav.Link as={Link} to=\"/Venues\">Venues</Nav.Link>\r\n                </div>\r\n                <div className=\"Atlan-body-content\">\r\n                    <h1>Oops!!! No Data Available here..</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { Form, Container, Row, Col, Card } from 'react-bootstrap';\r\nimport \"./App.css\";\r\nimport Players_Data from './Players.json'\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nexport default class Players extends Component {\r\n\r\n    state = {\r\n        checkedcatall: true,\r\n        checkedAverageall: true,\r\n        checkedhumidall: true,\r\n        checkednumberofballsall: true,\r\n        checkedtotalrunsall: true,\r\n        checkednumberofouts: true,\r\n        StrikeRates: [\r\n            { id: 1, value: \"10-50\", checked: true },\r\n            { id: 2, value: \"50-100\", checked: true },\r\n            { id: 3, value: \"100-150\", checked: true },\r\n            { id: 4, value: \"150-200\", checked: true },\r\n            { id: 5, value: \"200+\", checked: true },\r\n        ],\r\n        Average: [\r\n            { id: 12, value: \"10-20\", checked: true },\r\n            { id: 13, value: \"20-30\", checked: true },\r\n            { id: 14, value: \"30-40\", checked: true },\r\n            { id: 15, value: \"40-50\", checked: true },\r\n            { id: 16, value: \"50+\", checked: true },\r\n        ],\r\n        Total_Runs: [\r\n            { id: 17, value: \"0-500\", checked: true },\r\n            { id: 18, value: \"500-1000\", checked: true },\r\n            { id: 19, value: \"1000-1500\", checked: true },\r\n            { id: 20, value: \"1500-2000\", checked: true },\r\n            { id: 21, value: \"2000-2500\", checked: true },\r\n            { id: 22, value: \"2500+\", checked: true },\r\n        ],\r\n        Number_of_balls: [\r\n            { id: 23, value: \"0-500\", checked: true },\r\n            { id: 24, value: \"500-1000\", checked: true },\r\n            { id: 25, value: \"1000-1500\", checked: true },\r\n            { id: 26, value: \"1500-2000\", checked: true },\r\n            { id: 27, value: \"2000-2500\", checked: true },\r\n            { id: 28, value: \"2500+\", checked: true },\r\n        ],\r\n        Number_of_outs: [\r\n            { id: 29, value: \"0-10\", checked: true },\r\n            { id: 30, value: \"10-20\", checked: true },\r\n            { id: 31, value: \"20-30\", checked: true },\r\n            { id: 32, value: \"30-40\", checked: true },\r\n            { id: 33, value: \"40-50\", checked: true },\r\n            { id: 34, value: \"50+\", checked: true },\r\n        ],\r\n    }\r\n\r\n    handleAllCheckedStrikeRate = (event) => {\r\n        let StrikeRates = this.state.StrikeRates\r\n        StrikeRates.forEach(item => item.checked = event.target.checked)\r\n        this.setState({\r\n            StrikeRates: StrikeRates,\r\n            checkedcatall: event.target.checked\r\n        })\r\n    }\r\n\r\n    handleCheckChildElementStrikeRate = (event) => {\r\n        let StrikeRates = this.state.StrikeRates\r\n        StrikeRates.forEach(item => {\r\n            if (item.value === event.target.value) {\r\n                item.checked = event.target.checked\r\n            }\r\n            if (item.checked === false) {\r\n                this.setState({ checkedcatall: false })\r\n            }\r\n        })\r\n        this.setState({ StrikeRates: StrikeRates })\r\n    }\r\n    handleAllCheckedAverage = (event) => {\r\n        let Average = this.state.Average\r\n        Average.forEach(item => item.checked = event.target.checked)\r\n        this.setState({\r\n            Average: Average,\r\n            checkedAverageall: event.target.checked\r\n        })\r\n    }\r\n\r\n    handleCheckChildElementAverage = (event) => {\r\n        let Average = this.state.Average\r\n        Average.forEach(item => {\r\n            if (item.value === event.target.value) {\r\n                item.checked = event.target.checked\r\n            }\r\n            if (item.checked === false) {\r\n                this.setState({ checkedAverageall: false })\r\n            }\r\n        })\r\n        this.setState({ Average: Average })\r\n    }\r\n\r\n    handleAllCheckedTotal_Runs = (event) => {\r\n        let Total_Runs = this.state.Total_Runs\r\n        Total_Runs.forEach(item => item.checked = event.target.checked)\r\n        this.setState({\r\n            Total_Runs: Total_Runs,\r\n            checkedtotalrunsall: event.target.checked\r\n        })\r\n    }\r\n\r\n    handleCheckChildElementTotal_Runs = (event) => {\r\n        let Total_Runs = this.state.Total_Runs\r\n        Total_Runs.forEach(item => {\r\n            if (item.value === event.target.value) {\r\n                item.checked = event.target.checked\r\n            }\r\n            if (item.checked === false) {\r\n                this.setState({ checkedtotalrunsall: false })\r\n            }\r\n        })\r\n        this.setState({ Total_Runs: Total_Runs })\r\n    }\r\n\r\n    handleAllCheckedNumber_of_balls = (event) => {\r\n        let Number_of_balls = this.state.Number_of_balls\r\n        Number_of_balls.forEach(item => item.checked = event.target.checked)\r\n        this.setState({\r\n            Number_of_balls: Number_of_balls,\r\n            checkednumberofballsall: event.target.checked\r\n        })\r\n    }\r\n\r\n    handleCheckChildElementNumber_of_balls = (event) => {\r\n        let Number_of_balls = this.state.Number_of_balls\r\n        Number_of_balls.forEach(item => {\r\n            if (item.value === event.target.value) {\r\n                item.checked = event.target.checked\r\n            }\r\n            if (item.checked === false) {\r\n                this.setState({ checkednumberofballsall: false })\r\n            }\r\n        })\r\n        this.setState({ Number_of_balls: Number_of_balls })\r\n    }\r\n\r\n    handleAllCheckedNumber_of_outs = (event) => {\r\n        let Number_of_outs = this.state.Number_of_outs\r\n        Number_of_outs.forEach(item => item.checked = event.target.checked)\r\n        this.setState({\r\n            Number_of_outs: Number_of_outs,\r\n            checkednumberofouts: event.target.checked\r\n        })\r\n    }\r\n\r\n    handleCheckChildElementNumber_of_outs = (event) => {\r\n        let Number_of_outs = this.state.Number_of_outs\r\n        Number_of_outs.forEach(item => {\r\n            if (item.value === event.target.value) {\r\n                item.checked = event.target.checked\r\n            }\r\n            if (item.checked === false) {\r\n                this.setState({ checkednumberofouts: false })\r\n            }\r\n        })\r\n        this.setState({ Number_of_outs: Number_of_outs })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Atlan-body\">\r\n                <Helmet>\r\n                    <title>Search The IPL-Players</title>\r\n                </Helmet>\r\n                <div className=\"atlan-display-buttons\">\r\n                    <Nav.Link style={{ backgroundColor: \"rgb(132 139 152)\" }} as={Link} to=\"/Players\">Players</Nav.Link>\r\n                    <Nav.Link as={Link} to=\"/Teams\">Teams</Nav.Link>\r\n                    <Nav.Link as={Link} to=\"/Owners\">Owners</Nav.Link>\r\n                    <Nav.Link as={Link} to=\"/Venues\">Venues</Nav.Link>\r\n                </div>\r\n                <Container>\r\n                    <Row>\r\n                        <Col sm=\"6\" lg=\"3\" xs=\"12\" className=\"mx-auto mt-2\">\r\n                            <br />\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    Strike Rate\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <div className=\"pl-2\">\r\n                                        <Form.Check onChange={this.handleAllCheckedStrikeRate} type=\"checkbox\" checked={this.state.checkedcatall} id=\"Select All StrikeRates\" label=\"Select All\" />\r\n                                        {this.state.StrikeRates.map((item, i) =>\r\n                                            <Form.Check key={i} onChange={this.handleCheckChildElementStrikeRate} type=\"checkbox\" label={item.value} {...item} />\r\n                                        )}\r\n                                    </div>\r\n                                </Card.Body>\r\n\r\n                                <Card.Header>\r\n                                    Average\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <div className=\"pl-2\">\r\n                                        <Form.Check onChange={this.handleAllCheckedAverage} type=\"checkbox\" checked={this.state.checkedAverageall} id=\"Select All Average\" label=\"Select All\" />\r\n                                        {this.state.Average.map((item, i) =>\r\n                                            <Form.Check key={i} onChange={this.handleCheckChildElementAverage} type=\"checkbox\" label={item.value} {...item} />\r\n                                        )}\r\n                                    </div>\r\n                                </Card.Body>\r\n\r\n                                <Card.Header>\r\n                                    Total_Runs\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <div className=\"pl-2\">\r\n                                        <Form.Check onChange={this.handleAllCheckedTotal_Runs} type=\"checkbox\" checked={this.state.checkedtotalrunsall} id=\"Select All Total_Runs\" label=\"Select All\" />\r\n                                        {this.state.Total_Runs.map((item, i) =>\r\n                                            <Form.Check key={i} onChange={this.handleCheckChildElementTotal_Runs} type=\"checkbox\" label={item.value} {...item} />\r\n                                        )}\r\n                                    </div>\r\n                                </Card.Body>\r\n\r\n                                <Card.Header>\r\n                                    Total Number of Balls Played\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <div className=\"pl-2\">\r\n                                        <Form.Check onChange={this.handleAllCheckedNumber_of_balls} type=\"checkbox\" checked={this.state.checkednumberofballsall} id=\"Select All Number_of_balls\" label=\"Select All\" />\r\n                                        {this.state.Number_of_balls.map((item, i) =>\r\n                                            <Form.Check key={i} onChange={this.handleCheckChildElementNumber_of_balls} type=\"checkbox\" label={item.value} {...item} />\r\n                                        )}\r\n                                    </div>\r\n                                </Card.Body>\r\n\r\n                                <Card.Header>\r\n                                    Total Number of Outs\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <div className=\"pl-2\">\r\n                                        <Form.Check onChange={this.handleAllCheckedNumber_of_outs} type=\"checkbox\" checked={this.state.checkednumberofouts} id=\"Select All Total_Outs\" label=\"Select All\" />\r\n                                        {this.state.Number_of_outs.map((item, i) =>\r\n                                            <Form.Check key={i} onChange={this.handleCheckChildElementNumber_of_outs} type=\"checkbox\" label={item.value} {...item} />\r\n                                        )}\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n\r\n                        </Col>\r\n                        <Col sm=\"6\" lg=\"9\" xs=\"12\" className=\"atlan-display-players\">\r\n                            <div className=\"col-lg-12\">\r\n                                {Players_Data.map((player, i) => {\r\n                                    return (\r\n                                        <div key={i} className=\" col-lg-4 col-md-12 col-sm-12 col-9 d-inline-flex mb-4\" >\r\n                                            <div className=\"atlan-player\">\r\n                                                <h3>{player.Player_Name}</h3>\r\n                                                <p>DOB - {player.DOB}<br />Batting Hand - {player.Batting_Hand}<br /> Bowling Skill - {player.Bowling_Skill}<br />Country - {player.Country}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { Form, Container, Row, Col, Card } from 'react-bootstrap';\r\nimport \"./App.css\";\r\nimport Venues_Data from './Venues.json'\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nexport default class Venues extends Component {\r\n\r\n    state = {\r\n        checkedcatall: true,\r\n        checkedAverageall: true,\r\n        checkedhumidall: true,\r\n        checkednumberofballsall: true,\r\n        checkedtotalrunsall: true,\r\n        checkednumberofouts: true,\r\n        StrikeRates: [\r\n            { id: 50, value: \"0-1000\", checked: true },\r\n            { id: 52, value: \"1000-2000\", checked: true },\r\n            { id: 53, value: \"2000-3000\", checked: true },\r\n            { id: 54, value: \"3000-4000\", checked: true },\r\n            { id: 55, value: \"4000+\", checked: true },\r\n        ],\r\n        Average: [\r\n            { id: 56, value: \"0-100\", checked: true },\r\n            { id: 57, value: \"100-200\", checked: true },\r\n            { id: 58, value: \"200-300\", checked: true },\r\n            { id: 59, value: \"300-400\", checked: true },\r\n            { id: 60, value: \"400+\", checked: true },\r\n        ],\r\n        Total_Runs: [\r\n            { id: 61, value: \"0-5\", checked: true },\r\n            { id: 62, value: \"5-10\", checked: true },\r\n            { id: 63, value: \"10-15\", checked: true },\r\n            { id: 64, value: \"15-20\", checked: true },\r\n            { id: 65, value: \"20-25\", checked: true },\r\n            { id: 66, value: \"25+\", checked: true },\r\n        ],\r\n        Number_of_balls: [\r\n            { id: 67, value: \"0-5\", checked: true },\r\n            { id: 68, value: \"5-10\", checked: true },\r\n            { id: 69, value: \"10-15\", checked: true },\r\n            { id: 70, value: \"15-20\", checked: true },\r\n            { id: 71, value: \"20-25\", checked: true },\r\n            { id: 72, value: \"25+\", checked: true },\r\n        ],\r\n        Number_of_outs: [\r\n            { id: 73, value: \"0-5\", checked: true },\r\n            { id: 74, value: \"5-10\", checked: true },\r\n            { id: 75, value: \"10-15\", checked: true },\r\n            { id: 76, value: \"15-20\", checked: true },\r\n            { id: 77, value: \"20-25\", checked: true },\r\n            { id: 78, value: \"25+\", checked: true },\r\n        ]\r\n    }\r\n\r\n    handleAllCheckedStrikeRate = (event) => {\r\n        let StrikeRates = this.state.StrikeRates\r\n        StrikeRates.forEach(item => item.checked = event.target.checked)\r\n        this.setState({\r\n            StrikeRates: StrikeRates,\r\n            checkedcatall: event.target.checked\r\n        })\r\n    }\r\n\r\n    handleCheckChildElementStrikeRate = (event) => {\r\n        let StrikeRates = this.state.StrikeRates\r\n        StrikeRates.forEach(item => {\r\n            if (item.value === event.target.value) {\r\n                item.checked = event.target.checked\r\n            }\r\n            if (item.checked === false) {\r\n                this.setState({ checkedcatall: false })\r\n            }\r\n        })\r\n        this.setState({ StrikeRates: StrikeRates })\r\n    }\r\n    handleAllCheckedAverage = (event) => {\r\n        let Average = this.state.Average\r\n        Average.forEach(item => item.checked = event.target.checked)\r\n        this.setState({\r\n            Average: Average,\r\n            checkedAverageall: event.target.checked\r\n        })\r\n    }\r\n\r\n    handleCheckChildElementAverage = (event) => {\r\n        let Average = this.state.Average\r\n        Average.forEach(item => {\r\n            if (item.value === event.target.value) {\r\n                item.checked = event.target.checked\r\n            }\r\n            if (item.checked === false) {\r\n                this.setState({ checkedAverageall: false })\r\n            }\r\n        })\r\n        this.setState({ Average: Average })\r\n    }\r\n\r\n    handleAllCheckedTotal_Runs = (event) => {\r\n        let Total_Runs = this.state.Total_Runs\r\n        Total_Runs.forEach(item => item.checked = event.target.checked)\r\n        this.setState({\r\n            Total_Runs: Total_Runs,\r\n            checkedtotalrunsall: event.target.checked\r\n        })\r\n    }\r\n\r\n    handleCheckChildElementTotal_Runs = (event) => {\r\n        let Total_Runs = this.state.Total_Runs\r\n        Total_Runs.forEach(item => {\r\n            if (item.value === event.target.value) {\r\n                item.checked = event.target.checked\r\n            }\r\n            if (item.checked === false) {\r\n                this.setState({ checkedtotalrunsall: false })\r\n            }\r\n        })\r\n        this.setState({ Total_Runs: Total_Runs })\r\n    }\r\n\r\n    handleAllCheckedNumber_of_balls = (event) => {\r\n        let Number_of_balls = this.state.Number_of_balls\r\n        Number_of_balls.forEach(item => item.checked = event.target.checked)\r\n        this.setState({\r\n            Number_of_balls: Number_of_balls,\r\n            checkednumberofballsall: event.target.checked\r\n        })\r\n    }\r\n\r\n    handleCheckChildElementNumber_of_balls = (event) => {\r\n        let Number_of_balls = this.state.Number_of_balls\r\n        Number_of_balls.forEach(item => {\r\n            if (item.value === event.target.value) {\r\n                item.checked = event.target.checked\r\n            }\r\n            if (item.checked === false) {\r\n                this.setState({ checkednumberofballsall: false })\r\n            }\r\n        })\r\n        this.setState({ Number_of_balls: Number_of_balls })\r\n    }\r\n\r\n    handleAllCheckedNumber_of_outs = (event) => {\r\n        let Number_of_outs = this.state.Number_of_outs\r\n        Number_of_outs.forEach(item => item.checked = event.target.checked)\r\n        this.setState({\r\n            Number_of_outs: Number_of_outs,\r\n            checkednumberofouts: event.target.checked\r\n        })\r\n    }\r\n\r\n    handleCheckChildElementNumber_of_outs = (event) => {\r\n        let Number_of_outs = this.state.Number_of_outs\r\n        Number_of_outs.forEach(item => {\r\n            if (item.value === event.target.value) {\r\n                item.checked = event.target.checked\r\n            }\r\n            if (item.checked === false) {\r\n                this.setState({ checkednumberofouts: false })\r\n            }\r\n        })\r\n        this.setState({ Number_of_outs: Number_of_outs })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Atlan-body\">\r\n                <Helmet>\r\n                    <title>Search The IPL-Venues</title>\r\n                </Helmet>\r\n                <div className=\"atlan-display-buttons\">\r\n                    <Nav.Link as={Link} to=\"/Players\">Players</Nav.Link>\r\n                    <Nav.Link as={Link} to=\"/Teams\">Teams</Nav.Link>\r\n                    <Nav.Link as={Link} to=\"/Owners\">Owners</Nav.Link>\r\n                    <Nav.Link style={{ backgroundColor: \"rgb(132 139 152)\" }} as={Link} to=\"/Venues\">Venues</Nav.Link>\r\n                </div>\r\n                <Container>\r\n                    <Row>\r\n                        <Col sm=\"6\" lg=\"3\" xs=\"12\" className=\"mx-auto mt-2\">\r\n                            <br />\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    Runs Scored\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <div className=\"pl-2\">\r\n                                        <Form.Check onChange={this.handleAllCheckedStrikeRate} type=\"checkbox\" checked={this.state.checkedcatall} id=\"Select All StrikeRates\" label=\"Select All\" />\r\n                                        {this.state.StrikeRates.map((item, i) =>\r\n                                            <Form.Check key={i} onChange={this.handleCheckChildElementStrikeRate} type=\"checkbox\" label={item.value} {...item} />\r\n                                        )}\r\n                                    </div>\r\n                                </Card.Body>\r\n\r\n                                <Card.Header>\r\n                                    Wickets Taken\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <div className=\"pl-2\">\r\n                                        <Form.Check onChange={this.handleAllCheckedAverage} type=\"checkbox\" checked={this.state.checkedAverageall} id=\"Select All Average\" label=\"Select All\" />\r\n                                        {this.state.Average.map((item, i) =>\r\n                                            <Form.Check key={i} onChange={this.handleCheckChildElementAverage} type=\"checkbox\" label={item.value} {...item} />\r\n                                        )}\r\n                                    </div>\r\n                                </Card.Body>\r\n\r\n                                <Card.Header>\r\n                                    Matches Tied\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <div className=\"pl-2\">\r\n                                        <Form.Check onChange={this.handleAllCheckedTotal_Runs} type=\"checkbox\" checked={this.state.checkedtotalrunsall} id=\"Select All Total_Runs\" label=\"Select All\" />\r\n                                        {this.state.Total_Runs.map((item, i) =>\r\n                                            <Form.Check key={i} onChange={this.handleCheckChildElementTotal_Runs} type=\"checkbox\" label={item.value} {...item} />\r\n                                        )}\r\n                                    </div>\r\n                                </Card.Body>\r\n\r\n                                <Card.Header>\r\n                                    Number of Matches with no results\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <div className=\"pl-2\">\r\n                                        <Form.Check onChange={this.handleAllCheckedNumber_of_balls} type=\"checkbox\" checked={this.state.checkednumberofballsall} id=\"Select All Number_of_balls\" label=\"Select All\" />\r\n                                        {this.state.Number_of_balls.map((item, i) =>\r\n                                            <Form.Check key={i} onChange={this.handleCheckChildElementNumber_of_balls} type=\"checkbox\" label={item.value} {...item} />\r\n                                        )}\r\n                                    </div>\r\n                                </Card.Body>\r\n\r\n                                <Card.Header>\r\n                                    Number of PlayOffs Played\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <div className=\"pl-2\">\r\n                                        <Form.Check onChange={this.handleAllCheckedNumber_of_outs} type=\"checkbox\" checked={this.state.checkednumberofouts} id=\"Select All Total_Outs\" label=\"Select All\" />\r\n                                        {this.state.Number_of_outs.map((item, i) =>\r\n                                            <Form.Check key={i} onChange={this.handleCheckChildElementNumber_of_outs} type=\"checkbox\" label={item.value} {...item} />\r\n                                        )}\r\n                                    </div>\r\n                                </Card.Body>\r\n\r\n                            </Card>\r\n\r\n                        </Col>\r\n                        <Col sm=\"6\" lg=\"9\" xs=\"12\" className=\"atlan-display-teams\">\r\n                            <div className=\"col-lg-12\">\r\n                                {Venues_Data.map((venue, i) => {\r\n                                    return (\r\n                                        <div key={i} className=\" col-lg-4 col-md-12 col-sm-12 col-9 d-inline-flex mb-4\" >\r\n                                            <div className=\"atlan-venues\">\r\n                                                <h3>{venue.venue}</h3>\r\n                                                <p>No Details Available</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport { Home, Header, Teams, Owners, Venues, Players } from './Components'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router>\n        <Header />\n        <Route path='/' exact component={Home} />\n        <Route path='/Home' exact component={Home} />\n        <Route path='/Players' exact component={Players} />\n        <Route path='/Teams' exact component={Teams} />\n        <Route path='/Venues' exact component={Venues} />\n        <Route path='/Owners' exact component={Owners} />\n      </Router >\n    )\n  }\n\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}